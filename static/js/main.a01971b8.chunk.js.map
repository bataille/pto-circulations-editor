{"version":3,"sources":["app/actions.js","containers/CirculationsSelectionButtonsGroup.js","containers/CirculationsLoadButton.js","containers/CirculationsSaveButton.js","containers/CirculationsDeleteButton.js","containers/CirculationsDuplicateButton.js","containers/CirculationsFanHeureDepartButton.js","containers/CirculationsFanNumMarcheButton.js","components/CirculationsListToolbar.js","app/tools/CirculationXmlTools.js","containers/CirculationRowActions.js","containers/CirculationNumMarcheCellEditor.js","containers/CirculationHeureDepartCellEditor.js","containers/CirculationRow.js","containers/CirculationsList.js","App.js","app/reducers/circulationsById.js","app/reducers/toolbar.js","app/reducers/index.js","app/store.js","index.js"],"names":["stopNumMarcheCellEdition","id","type","stopHeureDepartCellEdition","CirculationsSelectionButtonsGroup","ButtonGroup","className","this","props","Button","variant","onClick","dispatch","React","Component","connect","CirculationsLoadButton","event","stopPropagation","preventDefault","Array","from","target","files","forEach","file","text","then","fileText","xmlText","disabled","isLoading","upload","click","ref","style","display","onChange","onChangeFile","bind","multiple","state","toolbar","loadingInfo","CirculationsSaveButton","getCirculationXmlText","circulation","circulationsText","dateCreation","demandeur","localisation","parcours","mission","profilHoraire","profilDeCirculation","evenementsCirculation","etatCirculation","typeConvoi","typeGestion","renvoisStandards","parcoursTopologique","concatAllCirculationsAsText","circulationsById","Object","keys","fileName","circulations","element","document","createElement","setAttribute","encodeURIComponent","body","appendChild","removeChild","saveAsXmlFile","CirculationsDeleteButton","CirculationsDuplicateButton","CirculationsFanHeureDepartButton","parsedDate","Date","now","dateEdited","toISOString","slice","timeEdited","toLocaleTimeString","increment","handleShow","handleClose","handleValidate","start","secondsIncrement","newHeureDepart","DropdownItem","Modal","show","shown","onHide","Header","closeButton","Title","Body","Form","Group","Label","InputGroup","FormControl","defaultValue","aria-label","value","Control","placeholder","secondsInc","parseInt","Footer","fanHeureDepartModal","CirculationsFanNumMarcheButton","numMarcheEdited","fanNumMarcheModal","CirculationsListToolbar","Navbar","bg","sticky","DropdownButton","title","xmlParser","DOMParser","xmlSerializer","XMLSerializer","xmlTextToCirculationsObject","defaultCirculationObject","result","parseFromString","getElementsByTagName","currentId","hasChildNodes","childNodes","node","tagName","innerHTML","serializeToString","getNumMarche","withNumMarche","numMarche","xmlDom","getCodeTCT","getHeureDepart","withHeureDepart","heureDepart","CirculationRowAction","href","CirculationNumMarcheCellEditor","numMarcheEdit","onKeyDown","key","onKeyPress","Append","CirculationHeureDepartCellEditor","CirculationRow","selected","codeTCT","heureDepartEdited","toLocaleDateString","CirculationRowActions","ownProps","circulationsIdList","Table","hover","map","circulationId","App","Container","fluid","paddingLeft","paddingRight","extended","omit","keyToOmit","omittedPropObj","filterObject","object","filterFunction","filtered","duplicateSelectedCirculations","reduce","newId","uuidv1","fanHeureDepart","acc","newAcc","currentDate","setSeconds","getSeconds","fanNumMarche","action","circulationsToAdd","defaultState","toLoadCount","loadedCount","shiftDateModal","combineReducers","configureStore","reducer","middleware","getDefaultMiddleware","serializableCheck","ReactDOM","render","StrictMode","store","getElementById"],"mappings":"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","file":"static/js/main.a01971b8.chunk.js","sourcesContent":["export const submitXmlFile = (xmlText) => ({\n  type: 'XML_FILE_SUBMITED',\n  xmlText: xmlText\n})\n\nexport const selectAll = () => ({\n  type: 'SELECT_ALL'\n})\n\nexport const unselectAll = () => ({\n  type: 'UNSELECT_ALL'\n})\n\nexport const flipSelectionAll = () => ({\n  type: 'FLIP_SELECT_ALL'\n})\n\nexport const changeCirculation = (id, circulation) => ({\n  type: 'CIRCULATION_CHANGED',\n  id: id,\n  circulation: circulation\n})\n\nexport const clickOnCirculationRow = (id) => ({\n  type: 'CIRCULATION_ROW_CLICKED_ON',\n  id: id\n})\n\nexport const deleteCirculation = (id) => ({\n  type: 'CIRCULATION_DELETED',\n  id: id\n})\n\nexport const deleteSelected = () => ({\n  type: 'DELETE_SELECTED_BUTTON_PRESSED',\n})\n\nexport const duplicateCirculation = (id) => ({\n  type: 'CIRCULATION_DUPLICATED',\n  id: id\n})\n\nexport const duplicateSelected = () => ({\n  type: 'DUPLICATE_SELECTED_BUTTON_PRESSED',\n})\n\nexport const numMarcheCellClicked = (id) => ({\n  type: 'NUM_MARCHE_CELL_CLICKED',\n  id: id\n})\n\nexport const stopNumMarcheCellEdition = (id) => ({\n  type: 'STOP_NUM_MARCHE_CELL_EDITION',\n  id: id\n})\n\nexport const changeNumMarche = (id, numMarche) => ({\n  type: 'CIRCULATION_NUM_MARCHE_CHANGED',\n  id: id,\n  numMarche: numMarche\n})\n\nexport const heureDepartCellClicked = (id) => ({\n  type: 'HEURE_DEPART_CELL_CLICKED',\n  id: id\n})\n\nexport const stopHeureDepartCellEdition = (id) => ({\n  type: 'STOP_HEURE_DEPART_CELL_EDITION',\n  id: id\n})\n\nexport const changeHeureDepart = (id, heureDepart) => ({\n  type: 'CIRCULATION_HEURE_DEPART_CHANGED',\n  id: id,\n  heureDepart: heureDepart\n})\n\nexport const fanHeureDepartButtonClicked = () => ({\n  type: 'FAN_HEURE_DEPART_BUTTON_CLICKED',\n})\n\nexport const fanHeureDepartClosed = () => ({\n  type: 'FAN_HEURE_DEPART_CLOSED'\n})\n\nexport const fanHeureDepartValidated = (start, secondsIncrement) =>  ({\n  type: 'FAN_HEURE_DEPART_VALIDATED',\n  start: start,\n  secondsIncrement: secondsIncrement\n})\n\nexport const fanNumMarcheButtonClicked = () => ({\n  type: 'FAN_NUM_MARCHE_BUTTON_CLICKED',\n})\n\nexport const fanNumMarcheClosed = () => ({\n  type: 'FAN_NUM_MARCHE_CLOSED'\n})\n\nexport const fanNumMarcheValidated = (start, increment) =>  ({\n  type: 'FAN_NUM_MARCHE_VALIDATED',\n  start: start,\n  increment: increment\n})","import React from 'react'\nimport { connect } from 'react-redux'\nimport { selectAll, unselectAll, flipSelectionAll } from '../app/actions'\n\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\nimport Button from 'react-bootstrap/Button'\nimport { ListCheck, ListTask, CircleHalf } from 'react-bootstrap-icons';\n\nclass CirculationsSelectionButtonsGroup extends React.Component {\n\n  render() {\n    return (\n      <ButtonGroup className={this.props.className}>\n        <Button variant=\"light\"\n          onClick={() => { this.props.dispatch(selectAll()) }}>\n          <ListCheck />\n        </Button >\n        <Button variant=\"light\"\n          onClick={() => { this.props.dispatch(unselectAll()) }}>\n          <ListTask />\n        </Button >\n        <Button variant=\"light\"\n          onClick={() => { this.props.dispatch(flipSelectionAll())}}>\n          <CircleHalf />\n        </Button>\n      </ButtonGroup>\n    );\n  }\n\n}\n\nexport default connect()(CirculationsSelectionButtonsGroup)","import React from 'react'\nimport { connect } from 'react-redux'\nimport { submitXmlFile } from '../app/actions'\n\nimport Button from 'react-bootstrap/Button'\nimport { Download } from 'react-bootstrap-icons';\n\nclass CirculationsLoadButton extends React.Component {\n\n  onChangeFile(event) {\n    event.stopPropagation();\n    event.preventDefault();\n    Array.from(event.target.files).forEach((file) => {\n      file.text().then((fileText) => {\n        this.props.dispatch(submitXmlFile(fileText));\n      });\n    });\n  }\n\n  render() {\n    return (\n      <Button variant=\"primary\" className={this.props.className}\n        disabled={this.props.isLoading}\n        onClick={() => { if (!this.props.isLoading) { this.upload.click() }}}>\n        <input type=\"file\" id=\"circulationsFiles\"\n          ref={(ref) => this.upload = ref}\n          style={{ display: \"none\" }}\n          onChange={this.onChangeFile.bind(this)} multiple />\n        <Download />\n      </Button >\n    );\n  }\n\n}\n\nconst mapState = (state) => { \n  return { isLoading: state.toolbar.loadingInfo.isLoading }\n}\n\nexport default connect(mapState)(CirculationsLoadButton)","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport Button from 'react-bootstrap/Button'\nimport { Upload } from 'react-bootstrap-icons';\n\nclass CirculationsSaveButton extends React.Component {\n\n    getCirculationXmlText = (circulation) => {\n        var circulationsText = \"<Circulation>\\n\";\n\n        circulationsText += \"<id>\" + circulation.id + \"</id>\\n\";\n        circulationsText += \"<dateCreation>\" + circulation.dateCreation + \"</dateCreation>\\n\";\n        circulationsText += \"<demandeur>\" + circulation.demandeur + \"</demandeur>\\n\"\n        circulationsText += \"<localisation>\" + circulation.localisation + \"</localisation>\\n\";\n        circulationsText += circulation.parcours + \"\\n\";\n        circulationsText += circulation.mission + \"\\n\";\n        circulationsText += circulation.profilHoraire + \"\\n\";\n        circulationsText += circulation.profilDeCirculation + \"\\n\";\n        circulationsText += circulation.evenementsCirculation + \"\\n\";\n        circulationsText += circulation.etatCirculation + \"\\n\";\n        circulationsText += circulation.typeConvoi + \"\\n\";\n        circulationsText += circulation.typeGestion + \"\\n\";\n        circulationsText += circulation.renvoisStandards + \"\\n\";\n        circulationsText += circulation.parcoursTopologique + \"\\n\";\n\n        circulationsText += \"</Circulation>\\n\";\n\n        return circulationsText;\n    }\n\n    concatAllCirculationsAsText = (circulationsById) => {\n        var text =  \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n\\n\";\n        text += \"<circulations>\\n\";\n\n        Object.keys(circulationsById).forEach((id) => {\n            text += this.getCirculationXmlText(circulationsById[id]);\n        });\n\n        text += \"</circulations>\";\n        return text;\n    }\n\n    saveAsXmlFile(fileName) {\n        let xmlText = this.concatAllCirculationsAsText(this.props.circulations);\n\n        var element = document.createElement('a');\n        element.setAttribute('href',\n            'data:application/xml;charset=utf-8,' + encodeURIComponent(xmlText));\n        element.setAttribute('download', fileName);\n\n        element.style.display = 'none';\n        document.body.appendChild(element);\n\n        element.click();\n\n        document.body.removeChild(element);\n    }\n\n    render() {\n        return (\n            <Button variant=\"success\" className={this.props.className}\n                onClick={() => { this.saveAsXmlFile(this.props.fileName) }}>\n                <Upload />\n            </Button >\n        );\n    }\n\n}\n\n\nconst mapStateToProps = state => {\n    return ({\n        circulations: state.circulationsById\n    })\n}\n\nexport default connect(mapStateToProps)(CirculationsSaveButton)\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { deleteSelected } from '../app/actions'\n\nimport Button from 'react-bootstrap/Button'\nimport { Trash } from 'react-bootstrap-icons';\n\nclass CirculationsDeleteButton extends React.Component {\n\n  render() {\n    return (\n      <Button variant=\"light\" className={this.props.className}\n        onClick={() => { this.props.dispatch(deleteSelected()) }}>\n        <Trash />\n      </Button >\n    );\n  }\n\n}\n\nexport default connect()(CirculationsDeleteButton)","import React from 'react'\nimport { connect } from 'react-redux'\nimport { duplicateSelected } from '../app/actions'\n\nimport Button from 'react-bootstrap/Button'\nimport { Files } from 'react-bootstrap-icons';\n\nclass CirculationsDuplicateButton extends React.Component {\n\n  render() {\n    return (\n      <Button variant=\"light\" className={this.props.className}\n        onClick={() => { this.props.dispatch(duplicateSelected()) }}>\n        <Files />\n      </Button >\n    );\n  }\n\n}\n\nexport default connect()(CirculationsDuplicateButton)","import React from 'react'\nimport { connect } from 'react-redux'\nimport { fanHeureDepartButtonClicked, fanHeureDepartClosed, fanHeureDepartValidated } from '../app/actions'\n\nimport DropdownItem from 'react-bootstrap/DropdownItem'\nimport Button from 'react-bootstrap/Button'\nimport Modal from 'react-bootstrap/Modal'\nimport FormControl from 'react-bootstrap/FormControl'\nimport Form from 'react-bootstrap/Form'\nimport InputGroup from 'react-bootstrap/InputGroup'\n\nclass CirculationsFanHeureDepartButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        let parsedDate = new Date(Date.now());\n        this.dateEdited = parsedDate.toISOString().slice(0, 10);\n        this.timeEdited = parsedDate.toLocaleTimeString('fr-FR');\n\n        this.increment = 600; // default: 10 minutes increment\n\n        // These bindings are necessary to make `this` work in the callback    \n        this.handleShow = this.handleShow.bind(this);\n        this.handleClose = this.handleClose.bind(this);\n        this.handleValidate = this.handleValidate.bind(this);\n    }\n\n    handleShow(event) {\n        this.props.dispatch(fanHeureDepartButtonClicked());\n        event.stopPropagation();\n    }\n\n    handleClose(event) {\n        this.props.dispatch(fanHeureDepartClosed());\n        if (event) {\n            event.stopPropagation();\n        }\n    }\n\n    handleValidate(event) {\n        let newHeureDepart = new Date(\n            this.dateEdited + \" \" + this.timeEdited);\n        this.props.dispatch(\n            fanHeureDepartValidated(newHeureDepart.toISOString(), this.increment));\n        event.stopPropagation();\n    }\n\n    render() {\n        return (\n            <DropdownItem variant=\"light\" onClick={this.handleShow}>\n                Heure départ\n                <Modal show={this.props.shown} onHide={this.handleClose}\n                    onClick={(event) => { event.stopPropagation(); }}>\n                    <Modal.Header closeButton>\n                        <Modal.Title>Ventilatation des heures de départ</Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n                        <Form.Group>\n                            <Form.Label>Heure de départ</Form.Label>\n\n                            <InputGroup>\n                                <FormControl\n                                    defaultValue={this.dateEdited}\n                                    aria-label=\"Date de départ\"\n                                    type=\"date\"\n                                    onChange={(event) => {\n                                        this.dateEdited = event.target.value;\n                                    }}\n                                />\n                                <FormControl\n                                    defaultValue={this.timeEdited}\n                                    aria-label=\"Heure de départ\"\n                                    type=\"time\"\n                                    onChange={(event) => {\n                                        this.timeEdited = event.target.value;\n                                    }}\n                                />\n                            </InputGroup>\n                        </Form.Group>\n                        <Form.Group>\n                            <Form.Label>Incrément</Form.Label>\n                            <Form.Control\n                                defaultValue={\"00:10:00\"}\n                                type=\"time\" placeholder=\"Incrément\"\n                                onChange={(event) => {\n                                    var secondsInc =\n                                        parseInt(event.target.value.slice(0, 2) * 3600, 10);\n                                    secondsInc += parseInt(event.target.value.slice(3, 5) * 60, 10);\n                                    secondsInc += parseInt(event.target.value.slice(6, 8), 10);\n                                    this.increment = secondsInc;\n                                }} />\n                        </Form.Group>\n                    </Modal.Body>\n                    <Modal.Footer>\n                        <Button variant=\"danger\" onClick={this.handleClose}>\n                            Annuler\n                    </Button>\n                        <Button variant=\"success\" onClick={this.handleValidate}>\n                            Valider\n                    </Button>\n                    </Modal.Footer>\n                </Modal>\n            </DropdownItem>\n        );\n    }\n\n}\n\nconst mapState = (state) => {\n    return ({\n        shown: state.toolbar.fanHeureDepartModal.shown\n    });\n}\n\nexport default connect(mapState)(CirculationsFanHeureDepartButton)","import React from 'react'\nimport { connect } from 'react-redux'\nimport { fanNumMarcheButtonClicked, fanNumMarcheClosed, fanNumMarcheValidated } from '../app/actions'\n\nimport DropdownItem from 'react-bootstrap/DropdownItem'\nimport Button from 'react-bootstrap/Button'\nimport Modal from 'react-bootstrap/Modal'\nimport FormControl from 'react-bootstrap/FormControl'\nimport Form from 'react-bootstrap/Form'\nimport { ListNested } from 'react-bootstrap-icons';\n\nclass CirculationsFanNumMarcheButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.numMarcheEdited = 0;\n        this.increment = 1;\n\n        // These bindings are necessary to make `this` work in the callback    \n        this.handleShow = this.handleShow.bind(this);\n        this.handleClose = this.handleClose.bind(this);\n        this.handleValidate = this.handleValidate.bind(this);\n    }\n\n    handleShow(event) {\n        this.props.dispatch(fanNumMarcheButtonClicked());\n        event.stopPropagation();\n    }\n\n    handleClose(event) {\n        this.props.dispatch(fanNumMarcheClosed());\n        if (event) {\n            event.stopPropagation();\n        }\n    }\n\n    handleValidate(event) {\n        this.props.dispatch(\n            fanNumMarcheValidated(this.numMarcheEdited, this.increment));\n        event.stopPropagation();\n    }\n\n    render() {\n        return (\n            <DropdownItem onClick={this.handleShow}>\n                Numéro de marche\n                <Modal show={this.props.shown} onHide={this.handleClose} \n                onClick={(event) => { event.stopPropagation(); }}>\n                    <Modal.Header closeButton>\n                        <Modal.Title>Ventilatation des numéros de marche</Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n                        <Form.Group>\n                            <Form.Label>Numéro de marche intial</Form.Label>\n                            <FormControl\n                                defaultValue={this.dateEdited}\n                                aria-label=\"Numéro de marche\"\n                                type=\"number\"\n                                onChange={(event) => {\n                                    this.numMarcheEdited = parseInt(event.target.value, 10);\n                                }}\n                            />\n                        </Form.Group>\n                        <Form.Group>\n                            <Form.Label>Incrément</Form.Label>\n                            <Form.Control\n                                defaultValue=\"1\"\n                                type=\"number\" placeholder=\"Incrément\"\n                                onChange={(event) => {\n                                    this.increment = parseInt(event.target.value, 10);\n                                }\n                                } />\n                        </Form.Group>\n                    </Modal.Body>\n                    <Modal.Footer>\n                        <Button variant=\"danger\" onClick={this.handleClose}>\n                            Annuler\n                    </Button>\n                        <Button variant=\"success\" onClick={this.handleValidate}>\n                            Valider\n                    </Button>\n                    </Modal.Footer>\n                </Modal>\n            </DropdownItem>\n        );\n    }\n\n}\n\nconst mapState = (state) => {\n    return ({\n        shown: state.toolbar.fanNumMarcheModal.shown\n    });\n}\n\nexport default connect(mapState)(CirculationsFanNumMarcheButton)","import React from 'react';\n\nimport Navbar from 'react-bootstrap/Navbar'\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\nimport DropdownButton from 'react-bootstrap/DropdownButton'\nimport { ListNested } from 'react-bootstrap-icons';\n\nimport CirculationsSelectionButtonsGroup from '../containers/CirculationsSelectionButtonsGroup'\nimport CirculationsLoadButton from '../containers/CirculationsLoadButton'\nimport CirculationsSaveButton from '../containers/CirculationsSaveButton'\nimport CirculationsDeleteButton from '../containers/CirculationsDeleteButton'\nimport CirculationsDuplicateButton from '../containers/CirculationsDuplicateButton'\nimport CirculationsFanHeureDepartButton from '../containers/CirculationsFanHeureDepartButton'\nimport CirculationsFanNumMarcheButton from '../containers/CirculationsFanNumMarcheButton'\n\n\nconst CirculationsListToolbar = () => (\n    <Navbar bg=\"dark\" sticky=\"top\">\n        <CirculationsLoadButton className=\"mr-2\" />\n        <CirculationsSelectionButtonsGroup className=\"mr-2\" />\n        <ButtonGroup className=\"mr-2\">\n            <CirculationsDuplicateButton />\n            <CirculationsDeleteButton />\n        </ButtonGroup>\n\n        <DropdownButton variant=\"light\" title={<ListNested />}>\n        <CirculationsFanNumMarcheButton />\n        <CirculationsFanHeureDepartButton />\n        </DropdownButton>\n\n        <CirculationsSaveButton fileName=\"circulations.xml\" className=\"ml-auto\" />\n    </Navbar>\n)\n\nexport default CirculationsListToolbar;\n","const xmlParser = new DOMParser();\nconst xmlSerializer = new XMLSerializer();\n\nexport const xmlTextToCirculationsObject = (xmlText, defaultCirculationObject) => {\n  let result = { };\n  let xmlDoc = xmlParser.parseFromString(xmlText, \"application/xml\");\n  let circulations = xmlDoc.getElementsByTagName(\"Circulation\");\n\n  Array.from(circulations).forEach((circulation) => {\n    var currentId = 0;\n    if (circulation.hasChildNodes) {\n      circulation.childNodes.forEach((node) => {\n        switch (node.tagName) {\n          case \"id\":\n            currentId = node.innerHTML;\n            result[currentId] = {\n              ...defaultCirculationObject,\n              id: node.innerHTML,\n            };\n            break;\n          case \"dateCreation\":\n            result[currentId].dateCreation = node.innerHTML;\n            break;\n          case \"demandeur\":\n            result[currentId].demandeur = node.innerHTML;\n            break;\n          case \"localisation\":\n            result[currentId].localisation = node.innerHTML;\n            break;\n          case \"Parcours\":\n            result[currentId].parcours = xmlSerializer.serializeToString(node);\n            break;\n          case \"Mission\":\n            result[currentId].mission = xmlSerializer.serializeToString(node);\n            break;\n          case \"ProfilHoraire\":\n            result[currentId].profilHoraire = xmlSerializer.serializeToString(node);\n            break;\n          case \"ProfilDeCirculation\":\n            result[currentId].profilDeCirculation = xmlSerializer.serializeToString(node);\n            break;\n          case \"evenementsCirculation\":\n            result[currentId].evenementsCirculation = xmlSerializer.serializeToString(node);\n            break;\n          case \"EtatCirculation\":\n            result[currentId].etatCirculation = xmlSerializer.serializeToString(node);\n            break;\n          case \"TypeConvoi\":\n            result[currentId].typeConvoi = xmlSerializer.serializeToString(node);\n            break;\n          case \"TypeGestion\":\n            result[currentId].typeGestion = xmlSerializer.serializeToString(node);\n            break;\n          case \"renvoisStandards\":\n            result[currentId].renvoisStandards = xmlSerializer.serializeToString(node);\n            break;\n          case \"ParcoursTopologique\":\n            result[currentId].parcoursTopologique = xmlSerializer.serializeToString(node);\n            break;\n          default:\n            return;\n        }\n      })\n    }\n  })\n\n  return result;\n}\n\nexport const getNumMarche = (circulation) => {\n    let xmlDom = xmlParser.parseFromString(circulation.etatCirculation, \"application/xml\");\n    return xmlDom.getElementsByTagName(\"numMarcheOrigine\")[0].innerHTML;\n}\n\nexport const withNumMarche = (circulation, numMarche) => {\n  let xmlDom = xmlParser.parseFromString(circulation.etatCirculation, \"application/xml\");\n  xmlDom.getElementsByTagName(\"numMarcheOrigine\")[0].innerHTML = numMarche;\n  return ({\n    ...circulation,\n    etatCirculation: xmlSerializer.serializeToString(xmlDom) \n  })\n}\n\nexport const getCodeTCT = (circulation) => {\n    let xmlDom = xmlParser.parseFromString(circulation.typeGestion, \"application/xml\");\n    return xmlDom.getElementsByTagName(\"tct\")[0].getElementsByTagName(\"libelle\")[0].innerHTML;\n}\n\nexport const getHeureDepart = (circulation) => {\n    let xmlDom = xmlParser.parseFromString(circulation.etatCirculation, \"application/xml\");\n    return xmlDom.getElementsByTagName(\"dateHeureOrigine\")[0].innerHTML;\n}\n\nexport const withHeureDepart = (circulation, heureDepart) => {\n    let xmlDom = xmlParser.parseFromString(circulation.etatCirculation, \"application/xml\");\n    xmlDom.getElementsByTagName(\"dateHeureOrigine\")[0].innerHTML = heureDepart;\n    return ({\n      ...circulation,\n      etatCirculation: xmlSerializer.serializeToString(xmlDom) \n    })\n}\n\nexport const getDepart = (circulation) => {\n    let xmlDom = xmlParser.parseFromString(circulation.mission, \"application/xml\");\n    return xmlDom.getElementsByTagName(\"etapesMission\")[0]\n        .getElementsByTagName(\"EtapeMission\")[0]\n        .getElementsByTagName(\"pr\")[0].getAttribute(\"id\");\n}\n\nexport const getArrivee = (circulation) => {\n    let xmlDom = xmlParser.parseFromString(circulation.mission, \"application/xml\");\n    const Etapes = xmlDom.getElementsByTagName(\"etapesMission\")[0]\n        .getElementsByTagName(\"EtapeMission\");\n    return Etapes[Etapes.length - 1].getElementsByTagName(\"pr\")[0].getAttribute(\"id\");\n}\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport { duplicateCirculation } from '../app/actions'\nimport { deleteCirculation } from '../app/actions'\n\nimport { Files } from 'react-bootstrap-icons';\nimport { Trash } from 'react-bootstrap-icons';\n\nclass CirculationRowAction extends React.Component {\n\n  render() {\n    return (\n      <div className={this.props.className}>\n        <a href=\"#\"\n          onClick={(event) => {\n            this.props.dispatch(duplicateCirculation(this.props.id));\n            event.stopPropagation();\n          }}\n          className=\"text-secondary mr-1\" >\n          <Files />\n        </a>\n        <a href=\"#\"\n          onClick={(event) => {\n            this.props.dispatch(deleteCirculation(this.props.id));\n            event.stopPropagation();\n          }}\n          className=\"text-secondary\" >\n          <Trash />\n        </a>\n      </div>\n    );\n  }\n\n}\n\nexport default connect()(CirculationRowAction)","import React from 'react'\nimport { connect } from 'react-redux'\nimport { changeNumMarche, stopNumMarcheCellEdition } from '../app/actions'\n\nimport InputGroup from 'react-bootstrap/InputGroup'\nimport Button from 'react-bootstrap/Button'\nimport FormControl from 'react-bootstrap/FormControl'\nimport { Check } from 'react-bootstrap-icons';\n\nclass CirculationNumMarcheCellEditor extends React.Component {\n    constructor(props) {\n        super(props);\n        this.numMarcheEdit = props.numMarche;\n\n        // This binding is necessary to make `this` work in the callback    \n        this.handleValidate = this.handleValidate.bind(this);\n    }\n\n    handleValidate() {\n        if (this.props.numMarche !== this.numMarcheEdit) {\n            this.props.dispatch(\n                changeNumMarche(this.props.id, this.numMarcheEdit));\n        } else {\n            this.props.dispatch(\n                stopNumMarcheCellEdition(this.props.id));\n        }\n    }\n\n    render() {\n        return (\n            <InputGroup className={this.props.className}>\n                <FormControl\n                    defaultValue={this.props.numMarche}\n                    aria-label=\"Numéro de marche\"\n                    onChange={(event) => { this.numMarcheEdit = event.target.value }}\n                    onClick={(event) => { event.stopPropagation() }}\n                    onKeyDown={(event) => { \n                        if (event.key === \"Escape\") {\n                        this.props.dispatch(stopNumMarcheCellEdition(this.props.id));\n                    }}}\n                    onKeyPress={(event) => {\n                        if (event.key === \"Enter\") {\n                            this.handleValidate();\n                    }}}\n                />\n                <InputGroup.Append>\n                    <Button variant=\"success\"\n                        onClick={(event) => {\n                            this.handleValidate();\n                            event.stopPropagation();\n                        }}>\n                        <Check />\n                    </Button >\n                </InputGroup.Append>\n            </InputGroup>\n        );\n    }\n\n}\n\nexport default connect()(CirculationNumMarcheCellEditor)\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { changeHeureDepart, stopHeureDepartCellEdition } from '../app/actions'\n\nimport InputGroup from 'react-bootstrap/InputGroup'\nimport Button from 'react-bootstrap/Button'\nimport FormControl from 'react-bootstrap/FormControl'\nimport { Check } from 'react-bootstrap-icons';\n\nclass CirculationHeureDepartCellEditor extends React.Component {\n    constructor(props) {\n        super(props);\n        let parsedDate = new Date(props.heureDepart);\n        this.dateEdited = parsedDate.toISOString().slice(0, 10);\n        this.timeEdited = parsedDate.toLocaleTimeString('fr-FR');\n\n        // This binding is necessary to make `this` work in the callback    \n        this.handleValidate = this.handleValidate.bind(this);\n    }\n\n    handleValidate() {\n        let newHeureDepart = new Date(\n            this.dateEdited + \" \" + this.timeEdited);\n        if (newHeureDepart !== this.props.heureDepart) {\n            this.props.dispatch(changeHeureDepart(\n                this.props.id, newHeureDepart.toISOString()))\n\n        } else {\n            this.props.dispatch(stopHeureDepartCellEdition(this.props.id));\n        }\n    }\n\n    render() {\n        return (\n            <div className={this.props.className}>\n                <InputGroup>\n                    <FormControl\n                        defaultValue={this.dateEdited}\n                        aria-label=\"Date de départ\"\n                        type=\"date\"\n                        onChange={(event) => {\n                            this.dateEdited = event.target.value\n                        }}\n                        onClick={(event) => { event.stopPropagation() }}\n                        onKeyDown={(event) => {\n                            if (event.key === \"Escape\") {\n                                this.props.dispatch(stopHeureDepartCellEdition(this.props.id));\n                            }\n                        }}\n                        onKeyPress={(event) => {\n                            if (event.key === \"Enter\") {\n                                this.handleValidate();\n                            }\n                        }}\n                    />\n                    <FormControl\n                        defaultValue={this.timeEdited}\n                        aria-label=\"Heure de départ\"\n                        type=\"time\"\n                        onChange={(event) => { this.timeEdited = event.target.value }}\n                        onClick={(event) => { event.stopPropagation() }}\n                        onKeyDown={(event) => {\n                            if (event.key === \"Escape\") {\n                                this.props.dispatch(stopHeureDepartCellEdition(this.props.id));\n                            }\n                        }}\n                        onKeyPress={(event) => {\n                            if (event.key === \"Enter\") {\n                                this.handleValidate();\n                            }\n                        }}\n                    />\n                    <InputGroup.Append>\n                        <Button variant=\"success\"\n                            onClick={(event) => {\n                                this.handleValidate();\n                                event.stopPropagation();\n                            }}>\n                            <Check />\n                        </Button >\n                    </InputGroup.Append>\n                </InputGroup>\n            </div>\n        );\n    }\n\n}\n\nexport default connect()(CirculationHeureDepartCellEditor)\n","import React from 'react';\nimport { connect } from 'react-redux'\nimport { clickOnCirculationRow, numMarcheCellClicked, heureDepartCellClicked } from '../app/actions'\nimport { getCodeTCT, getHeureDepart, getNumMarche } from '../app/tools/CirculationXmlTools'\n\nimport CirculationRowActions from '../containers/CirculationRowActions'\nimport CirculationNumMarcheCellEditor from './CirculationNumMarcheCellEditor'\nimport CirculationHeureDepartCellEditor from './CirculationHeureDepartCellEditor'\n\nclass CirculationRow extends React.Component {\n    render() {\n        let heureDepart = new Date(this.props.heureDepart);\n        return (\n            <tr className={this.props.selected ? \"table-secondary\" : \"\"}\n                onClick={() => { this.props.dispatch(clickOnCirculationRow(this.props.id)) }} >\n                <td>{this.props.id}</td>\n                <td>{\n                    this.props.numMarcheEdited\n                        ? <CirculationNumMarcheCellEditor\n                            id={this.props.id}\n                            numMarche={this.props.numMarche} />\n                        : <span onClick={(event) => {\n                            this.props.dispatch(numMarcheCellClicked(this.props.id));\n                            event.stopPropagation();\n                        }}>\n                            { this.props.numMarche }\n                        </span>\n                }</td>\n                <td>{this.props.codeTCT}</td>\n                <td>{\n                    this.props.heureDepartEdited\n                        ? <CirculationHeureDepartCellEditor\n                            id={this.props.id}\n                            heureDepart={this.props.heureDepart} />\n                        : <span onClick={(event) => {\n                            this.props.dispatch(heureDepartCellClicked(this.props.id));\n                            event.stopPropagation();\n                        }}>\n                            {heureDepart.toLocaleDateString('fr-FR')} - {heureDepart.toLocaleTimeString('fr-FR')}\n                        </span>\n                }</td>\n                <td><CirculationRowActions \n                id={this.props.id} className=\"float-right\" /></td>\n            </tr>\n        );\n    }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n    let circulation = state.circulationsById[ownProps.id];\n    return {\n        numMarche: getNumMarche(circulation),\n        codeTCT: getCodeTCT(circulation),\n        heureDepart: getHeureDepart(circulation),\n        selected: circulation.selected,\n        numMarcheEdited: circulation.numMarcheEdited,\n        heureDepartEdited: circulation.heureDepartEdited\n    }\n}\n\n\nexport default connect(mapStateToProps)(CirculationRow);","import React from 'react';\nimport { connect } from 'react-redux'\n\nimport Table from 'react-bootstrap/Table';\nimport CirculationRow from './CirculationRow';\n\nconst CirculationsList = ({ circulationsIdList }) => (\n    <Table hover>\n        <thead>\n            <tr>\n                <th className=\"w-30\">Id</th>\n                <th className=\"w-10\">Num. Marche</th>\n                <th className=\"w-10\">Code TCT</th>\n                <th className=\"w-30\">Date et heure de départ</th>\n                <th className=\"w-20\"></th>\n            </tr>\n        </thead>\n        <tbody>\n            {circulationsIdList.map(circulationId => (\n                <CirculationRow  key={circulationId}\n                id={circulationId} />\n            ))}\n        </tbody>\n    </Table >\n)\n\nconst mapStateToProps = state => {\n    return {\n        circulationsIdList: Object.keys(state.circulationsById)\n    }\n}\n\nexport default connect(mapStateToProps)(CirculationsList);","import React from 'react';\n\nimport './App.css';\n\nimport Container from 'react-bootstrap/Container';\nimport CirculationsListToolbar from './components/CirculationsListToolbar'\nimport CirculationsList from './containers/CirculationsList';\n\nconst App = () => (\n  <Container fluid style={{ paddingLeft: 0, paddingRight: 0 }}>\n    <CirculationsListToolbar />\n    <CirculationsList />\n  </Container>\n);\n\nexport default App;\n","import { v1 as uuidv1 } from 'uuid';\nimport { xmlTextToCirculationsObject, withNumMarche, withHeureDepart } from '../tools/CirculationXmlTools'\n\nconst defaultCirculationObject = {\n  selected: false,\n  extended: false,\n  numMarcheEdited: false,\n  heureDepartEdited: false\n}\n\nconst circulationsById = (state = {}, action) => {\n  switch (action.type) {\n    case 'XML_FILE_SUBMITED':\n      let circulationsToAdd = xmlTextToCirculationsObject(action.xmlText, defaultCirculationObject);\n      return ({\n        ...state,\n        ...circulationsToAdd\n      });\n    case 'SELECT_ALL':\n      return Object.keys(state).reduce((result, id) => {\n        result[id] = {\n          ...state[id],\n          selected: true\n        };\n        return result;\n      }, {});\n    case 'UNSELECT_ALL':\n      return Object.keys(state).reduce((result, id) => {\n        result[id] = {\n          ...state[id],\n          selected: false\n        };\n        return result;\n      }, {});\n    case 'FLIP_SELECT_ALL':\n      return Object.keys(state).reduce((result, id) => {\n        result[id] = {\n          ...state[id],\n          selected: !(state[id].selected)\n        };\n        return result;\n      }, {});\n    case 'CIRCULATION_CHANGED':\n      return ({\n        ...state,\n        [action.id]: {\n          ...state[action.id],\n          ...action.circulation\n        }\n      });\n    case 'CIRCULATION_ROW_CLICKED_ON':\n      if (state[action.id] != null) {\n        return ({\n          ...state,\n          [action.id]: {\n            ...state[action.id],\n            selected: !state[action.id].selected\n          }\n        })\n      } else return state;\n    case 'CIRCULATION_DELETED':\n      return omit(action.id, state);\n    case 'DELETE_SELECTED_BUTTON_PRESSED':\n      return filterObject(state, (circulation) => { return !circulation.selected; });\n    case 'CIRCULATION_DUPLICATED':\n      return Object.keys(state).reduce((result, id) => {\n        if (id === action.id) {\n          let newId = uuidv1();\n          return ({\n            ...result,\n            [id]: state[id],\n            [newId]: {\n              ...state[id],\n              id: newId,\n              selected: false\n            }\n          })\n        } else {\n          return ({ ...result, [id]: state[id] })\n        }\n      }, {});\n    case 'DUPLICATE_SELECTED_BUTTON_PRESSED':\n      return duplicateSelectedCirculations(state);\n    case 'NUM_MARCHE_CELL_CLICKED':\n      return ({\n        ...state,\n        [action.id]: {\n          ...state[action.id],\n          numMarcheEdited: true\n        }\n      });\n    case 'STOP_NUM_MARCHE_CELL_EDITION':\n      return ({\n        ...state,\n        [action.id]: {\n          ...state[action.id],\n          numMarcheEdited: false\n        }\n      });\n    case 'CIRCULATION_NUM_MARCHE_CHANGED':\n      return ({\n        ...state,\n        [action.id]: {\n          ...withNumMarche(state[action.id], action.numMarche),\n          numMarcheEdited: false\n        }\n      });\n    case 'HEURE_DEPART_CELL_CLICKED':\n      return ({\n        ...state,\n        [action.id]: {\n          ...state[action.id],\n          heureDepartEdited: true\n        }\n      });\n    case 'STOP_HEURE_DEPART_CELL_EDITION':\n      return ({\n        ...state,\n        [action.id]: {\n          ...state[action.id],\n          heureDepartEdited: false\n        }\n      })\n    case 'CIRCULATION_HEURE_DEPART_CHANGED':\n      return ({\n        ...state,\n        [action.id]: {\n          ...withHeureDepart(state[action.id], action.heureDepart),\n          heureDepartEdited: false\n        }\n      })\n    case 'FAN_HEURE_DEPART_VALIDATED':\n      return fanHeureDepart(state, action.start, action.secondsIncrement);\n    case 'FAN_NUM_MARCHE_VALIDATED':\n      return fanNumMarche(state, action.start, action.increment);  \n    default:\n      return state\n  }\n}\n\nconst omit = (keyToOmit, { [keyToOmit]: _, ...omittedPropObj } = {}) => omittedPropObj;\n\nconst filterObject = (object, filterFunction) => {\n  let filtered = {};\n  Object.keys(object).forEach((key) => {\n    if (filterFunction(object[key])) {\n      filtered[key] = object[key];\n    }\n  })\n  return filtered;\n}\n\nconst duplicateSelectedCirculations = (state) => {\n  return Object.keys(state).reduce((result, id) => {\n    if (state[id].selected) {\n      let newId = uuidv1();\n      return ({\n        ...result,\n        [id]: state[id],\n        [newId]: {\n          ...state[id],\n          id: newId,\n          selected: false\n        }\n      })\n    } else {\n      return ({ ...result, [id]: state[id] })\n    }\n  }, {});\n}\n\nconst fanHeureDepart = (state, start, secondsIncrement) => {\n  let { result } = Object.keys(state).reduce((acc, id) => {\n    if (state[id].selected) {\n      let newAcc = ({\n        ...acc,\n        result: {\n          ...acc.result,\n          [id]: withHeureDepart(state[id], acc.currentDate) \n        }\n      });\n      newAcc.currentDate.setSeconds(acc.currentDate.getSeconds() + secondsIncrement);\n      return newAcc;\n    } else {\n      return ({ ...acc, result: { ...acc.result, [id]: state[id] } });\n    }\n  }, {\n    currentDate: new Date(start),\n    start, result: ({})\n  });\n  return result;\n}\n\nconst fanNumMarche = (state, start, increment) => {\n  let { result } = Object.keys(state).reduce((acc, id) => {\n    if (state[id].selected) {\n      return ({\n        ...acc,\n        currentId: acc.currentId + increment,\n        result: {\n          ...acc.result,\n          [id]: withNumMarche(state[id], acc.currentId)\n        }\n      })\n    } else {\n      return ({...acc, result: {...acc.result, [id]: state[id]}})\n    }\n  }, {\n    currentId: start, \n    result: {}\n  });\n  return result;\n}\n\nexport default circulationsById","let defaultState = {\n    loadingInfo: {\n        isLoading: false,\n        toLoadCount: 0,\n        loadedCount: 0\n    },\n    shiftDateModal: {\n        shown: false,\n    },\n    fanHeureDepartModal: {\n        shown: false,\n    },\n    fanNumMarcheModal: {\n        shown: false,\n    }\n}\n\nconst toolbar = (state = defaultState, action) => {\n    switch (action.type) {\n        case 'FAN_HEURE_DEPART_BUTTON_CLICKED':\n            return ({\n                ...state,\n                fanHeureDepartModal: {\n                    ...state.fanHeureDepartModal,\n                    shown: true\n                }\n            })\n        case 'FAN_HEURE_DEPART_VALIDATED':\n        case 'FAN_HEURE_DEPART_CLOSED':\n            return ({\n                ...state,\n                fanHeureDepartModal: {\n                    shown: false\n                }\n            })\n            case 'FAN_NUM_MARCHE_BUTTON_CLICKED':\n                return ({\n                    ...state,\n                    fanNumMarcheModal: {\n                        ...state.fanNumMarcheModal,\n                        shown: true\n                    }\n                })\n            case 'FAN_NUM_MARCHE_VALIDATED':\n            case 'FAN_NUM_MARCHE_CLOSED':\n                return ({\n                    ...state,\n                    fanNumMarcheModal: {\n                        shown: false\n                    }\n                })\n        default:\n            return state\n    }\n}\n\nexport default toolbar","import { combineReducers } from 'redux'\nimport circulationsById from './circulationsById'\nimport toolbar from './toolbar'\n\nexport default combineReducers({\n    toolbar,\n    circulationsById\n})","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit'\n\nimport reducer from './reducers/index'\n\nexport default configureStore({\n  reducer: reducer,\n  middleware: getDefaultMiddleware({\n    serializableCheck: false,\n  })\n});","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nimport store from './app/store';\nimport { Provider } from 'react-redux';\n\n// Importing the Bootstrap CSS\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n    <React.StrictMode>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n  );\n  "],"sourceRoot":""}