{"version":3,"sources":["app/actions.js","containers/toolbar/SelectionButtonsGroup.js","containers/toolbar/LoadButton.js","containers/toolbar/SaveButton.js","containers/toolbar/DeleteButton.js","containers/toolbar/DuplicateButton.js","containers/toolbar/FanHeureDepartButton.js","containers/toolbar/FanNumMarcheButton.js","containers/toolbar/ShiftDateButton.js","components/Toolbar.js","app/tools/CirculationXmlTools.js","containers/circulationTableRow/CirculationRowActions.js","containers/circulationTableRow/NumMarcheCellEditor.js","containers/circulationTableRow/HeureDepartCellEditor.js","app/tools/CodeTctTools.js","containers/circulationTableRow/CodeTctCellEditor.js","containers/circulationTableRow/CirculationRow.js","containers/CirculationsTable.js","App.js","app/reducers/circulationsById.js","app/reducers/toolbar.js","app/reducers/index.js","app/store.js","index.js"],"names":["stopNumMarcheCellEdition","id","type","stopHeureDepartCellEdition","stopCodeTctCellEdition","SelectionButtonsGroup","ButtonGroup","className","this","props","Button","variant","onClick","dispatch","React","Component","connect","LoadButton","event","stopPropagation","preventDefault","Promise","all","Array","from","target","files","map","file","text","then","textArray","fileText","length","reduce","acc","xmlText","disabled","isLoading","upload","click","ref","style","display","onChange","onChangeFile","bind","multiple","state","toolbar","loadingInfo","SaveButton","getCirculationXmlText","circulation","circulationsText","dateCreation","demandeur","localisation","parcours","mission","profilHoraire","profilDeCirculation","evenementsCirculation","etatCirculation","typeConvoi","typeGestion","renvoisStandards","parcoursTopologique","concatAllCirculationsAsText","circulationsById","Object","keys","forEach","fileName","circulations","element","document","createElement","setAttribute","encodeURIComponent","body","appendChild","removeChild","saveAsXmlFile","DeleteButton","DuplicateButton","FanHeureDepartButton","parsedDate","Date","now","dateEdited","toISOString","slice","timeEdited","toLocaleTimeString","increment","handleShow","handleClose","handleValidate","start","secondsIncrement","newHeureDepart","DropdownItem","Modal","show","shown","onHide","Header","closeButton","Title","Body","Form","Group","Label","InputGroup","FormControl","defaultValue","aria-label","value","Control","placeholder","secondsInc","parseInt","Footer","fanHeureDepartModal","FanNumMarcheButton","numMarcheEdited","fanNumMarcheModal","ShiftDateButton","startDay","startTime","goalDay","goalTime","goal","shiftDateValidated","shiftDateModal","Toolbar","Navbar","bg","sticky","DropdownButton","title","xmlParser","DOMParser","xmlSerializer","XMLSerializer","xmlTextToCirculationsObject","defaultCirculationObject","result","parseFromString","getElementsByTagName","currentId","hasChildNodes","childNodes","node","tagName","innerHTML","serializeToString","getNumMarche","withNumMarche","numMarche","xmlDom","getCodeTCT","withCodeTCT","tctId","tctCode","getHeureDepart","withHeureDepart","heureDepart","CirculationRowAction","size","NumMarcheCellEditor","numMarcheEdit","onKeyDown","key","onKeyPress","Append","HeureDepartCellEditor","tctCodeIdMap","CodeTctCellEditor","codeTctEdit","codeTCT","changeCodeTct","as","codeTct","CirculationRow","selected","codeTctEdited","heureDepartEdited","toLocaleDateString","CirculationRowActions","ownProps","circulationsIdList","Table","hover","circulationId","App","Container","fluid","paddingLeft","paddingRight","extended","omit","keyToOmit","omittedPropObj","filterObject","object","filterFunction","filtered","duplicateSelectedCirculations","newId","uuidv1","fanHeureDepart","currentDate","produce","draftState","setSeconds","getSeconds","fanNumMarche","shiftDate","startDate","delta","origDate","getTime","action","circulationsToAdd","defaultState","toLoadCount","loadedCount","combineReducers","configureStore","reducer","ReactDOM","render","StrictMode","store","getElementById"],"mappings":"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","file":"static/js/main.dd0f716b.chunk.js","sourcesContent":["export const submitXmlFile = (xmlText) => ({\n  type: 'XML_FILE_SUBMITED',\n  xmlText: xmlText\n})\n\nexport const selectAll = () => ({\n  type: 'SELECT_ALL'\n})\n\nexport const unselectAll = () => ({\n  type: 'UNSELECT_ALL'\n})\n\nexport const flipSelectionAll = () => ({\n  type: 'FLIP_SELECT_ALL'\n})\n\nexport const changeCirculation = (id, circulation) => ({\n  type: 'CIRCULATION_CHANGED',\n  id: id,\n  circulation: circulation\n})\n\nexport const clickOnCirculationRow = (id) => ({\n  type: 'CIRCULATION_ROW_CLICKED_ON',\n  id: id\n})\n\nexport const deleteCirculation = (id) => ({\n  type: 'CIRCULATION_DELETED',\n  id: id\n})\n\nexport const deleteSelected = () => ({\n  type: 'DELETE_SELECTED_BUTTON_PRESSED',\n})\n\nexport const duplicateCirculation = (id) => ({\n  type: 'CIRCULATION_DUPLICATED',\n  id: id\n})\n\nexport const duplicateSelected = () => ({\n  type: 'DUPLICATE_SELECTED_BUTTON_PRESSED',\n})\n\nexport const numMarcheCellClicked = (id) => ({\n  type: 'NUM_MARCHE_CELL_CLICKED',\n  id: id\n})\n\nexport const stopNumMarcheCellEdition = (id) => ({\n  type: 'STOP_NUM_MARCHE_CELL_EDITION',\n  id: id\n})\n\nexport const changeNumMarche = (id, numMarche) => ({\n  type: 'CIRCULATION_NUM_MARCHE_CHANGED',\n  id: id,\n  numMarche: numMarche\n})\n\nexport const heureDepartCellClicked = (id) => ({\n  type: 'HEURE_DEPART_CELL_CLICKED',\n  id: id\n})\n\nexport const stopHeureDepartCellEdition = (id) => ({\n  type: 'STOP_HEURE_DEPART_CELL_EDITION',\n  id: id\n})\n\nexport const changeHeureDepart = (id, heureDepart) => ({\n  type: 'CIRCULATION_HEURE_DEPART_CHANGED',\n  id: id,\n  heureDepart: heureDepart\n})\n\nexport const codeTctCellClicked = (id) => ({\n  type: 'TCT_CELL_CLICKED',\n  id: id\n})\n\nexport const stopCodeTctCellEdition = (id) => ({\n  type: 'STOP_TCT_CELL_EDITION',\n  id: id\n})\n\nexport const changeCodeTct = (id, tctId, tctCode) => ({\n  type: 'CIRCULATION_TCT_CHANGED',\n  id: id,\n  tctId: tctId,\n  tctCode: tctCode\n})\n\nexport const fanHeureDepartButtonClicked = () => ({\n  type: 'FAN_HEURE_DEPART_BUTTON_CLICKED',\n})\n\nexport const fanHeureDepartClosed = () => ({\n  type: 'FAN_HEURE_DEPART_CLOSED'\n})\n\nexport const fanHeureDepartValidated = (start, secondsIncrement) =>  ({\n  type: 'FAN_HEURE_DEPART_VALIDATED',\n  start: start,\n  secondsIncrement: secondsIncrement\n})\n\nexport const fanNumMarcheButtonClicked = () => ({\n  type: 'FAN_NUM_MARCHE_BUTTON_CLICKED',\n})\n\nexport const fanNumMarcheClosed = () => ({\n  type: 'FAN_NUM_MARCHE_CLOSED'\n})\n\nexport const fanNumMarcheValidated = (start, increment) =>  ({\n  type: 'FAN_NUM_MARCHE_VALIDATED',\n  start: start,\n  increment: increment\n})\n\nexport const shiftDateButtonClicked = () => ({\n  type: 'SHIFT_DATE_BUTTON_CLICKED',\n})\n\nexport const shiftDateClosed = () => ({\n  type: 'SHIFT_DATE_CLOSED'\n})\n\nexport const shiftDateValidated = (start, goal) =>  ({\n  type: 'SHIFT_DATE_VALIDATED',\n  start: start,\n  goal: goal\n})","import React from 'react'\nimport { connect } from 'react-redux'\nimport { selectAll, unselectAll, flipSelectionAll } from '../../app/actions'\n\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\nimport Button from 'react-bootstrap/Button'\nimport { ListCheck, ListTask, CircleHalf } from 'react-bootstrap-icons';\n\nclass SelectionButtonsGroup extends React.Component {\n\n  render() {\n    return (\n      <ButtonGroup className={this.props.className}>\n        <Button variant=\"light\"\n          onClick={() => { this.props.dispatch(selectAll()) }}>\n          <ListCheck />\n        </Button >\n        <Button variant=\"light\"\n          onClick={() => { this.props.dispatch(unselectAll()) }}>\n          <ListTask />\n        </Button >\n        <Button variant=\"light\"\n          onClick={() => { this.props.dispatch(flipSelectionAll())}}>\n          <CircleHalf />\n        </Button>\n      </ButtonGroup>\n    );\n  }\n\n}\n\nexport default connect()(SelectionButtonsGroup)","import React from 'react'\nimport { connect } from 'react-redux'\nimport { submitXmlFile } from '../../app/actions'\n\nimport Button from 'react-bootstrap/Button'\nimport { Download } from 'react-bootstrap-icons';\n\nclass LoadButton extends React.Component {\n\n  onChangeFile(event) {\n    event.stopPropagation();\n    event.preventDefault();\n    Promise.all(Array.from(event.target.files).map((file) => { return file.text(); }))\n      .then(textArray => {\n        var fileText = \"\";\n        if (textArray.length === 1) {\n          fileText = textArray[0];\n        } else {\n          fileText = textArray.reduce(\n            (acc, text) => { return (acc + text + \"\\n\"); },\n            \"<circulations>\");\n          fileText += \"</circulations>\"\n        }\n        this.props.dispatch(submitXmlFile(fileText));\n      });\n  }\n\n  render() {\n    return (\n      <Button variant=\"primary\" className={this.props.className}\n        disabled={this.props.isLoading}\n        onClick={() => { if (!this.props.isLoading) { this.upload.click() } }}>\n        <input type=\"file\" id=\"circulationsFiles\"\n          ref={(ref) => this.upload = ref}\n          style={{ display: \"none\" }}\n          onChange={this.onChangeFile.bind(this)} multiple />\n        <Download />\n      </Button >\n    );\n  }\n\n}\n\nconst mapState = (state) => {\n  return { isLoading: state.toolbar.loadingInfo.isLoading }\n}\n\nexport default connect(mapState)(LoadButton)","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport Button from 'react-bootstrap/Button'\nimport { Upload } from 'react-bootstrap-icons';\n\nclass SaveButton extends React.Component {\n\n    getCirculationXmlText = (circulation) => {\n        var circulationsText = \"<Circulation>\\n\";\n\n        circulationsText += \"<id>\" + circulation.id + \"</id>\\n\";\n        circulationsText += \"<dateCreation>\" + circulation.dateCreation + \"</dateCreation>\\n\";\n        circulationsText += \"<demandeur>\" + circulation.demandeur + \"</demandeur>\\n\"\n        circulationsText += \"<localisation>\" + circulation.localisation + \"</localisation>\\n\";\n        circulationsText += circulation.parcours + \"\\n\";\n        circulationsText += circulation.mission + \"\\n\";\n        circulationsText += circulation.profilHoraire + \"\\n\";\n        circulationsText += circulation.profilDeCirculation + \"\\n\";\n        circulationsText += circulation.evenementsCirculation + \"\\n\";\n        circulationsText += circulation.etatCirculation + \"\\n\";\n        circulationsText += circulation.typeConvoi + \"\\n\";\n        circulationsText += circulation.typeGestion + \"\\n\";\n        circulationsText += circulation.renvoisStandards + \"\\n\";\n        circulationsText += circulation.parcoursTopologique + \"\\n\";\n\n        circulationsText += \"</Circulation>\\n\";\n\n        return circulationsText;\n    }\n\n    concatAllCirculationsAsText = (circulationsById) => {\n        var text =  \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n\\n\";\n        text += \"<circulations>\\n\";\n\n        Object.keys(circulationsById).forEach((id) => {\n            text += this.getCirculationXmlText(circulationsById[id]);\n        });\n\n        text += \"</circulations>\";\n        return text;\n    }\n\n    saveAsXmlFile(fileName) {\n        let xmlText = this.concatAllCirculationsAsText(this.props.circulations);\n\n        var element = document.createElement('a');\n        element.setAttribute('href',\n            'data:application/xml;charset=utf-8,' + encodeURIComponent(xmlText));\n        element.setAttribute('download', fileName);\n\n        element.style.display = 'none';\n        document.body.appendChild(element);\n\n        element.click();\n\n        document.body.removeChild(element);\n    }\n\n    render() {\n        return (\n            <Button variant=\"success\" className={this.props.className}\n                onClick={() => { this.saveAsXmlFile(this.props.fileName) }}>\n                <Upload />\n            </Button >\n        );\n    }\n\n}\n\n\nconst mapStateToProps = state => {\n    return ({\n        circulations: state.circulationsById\n    })\n}\n\nexport default connect(mapStateToProps)(SaveButton)\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { deleteSelected } from '../../app/actions'\n\nimport Button from 'react-bootstrap/Button'\nimport { Trash } from 'react-bootstrap-icons';\n\nclass DeleteButton extends React.Component {\n\n  render() {\n    return (\n      <Button variant=\"light\" className={this.props.className}\n        onClick={() => { this.props.dispatch(deleteSelected()) }}>\n        <Trash />\n      </Button >\n    );\n  }\n\n}\n\nexport default connect()(DeleteButton)","import React from 'react'\nimport { connect } from 'react-redux'\nimport { duplicateSelected } from '../../app/actions'\n\nimport Button from 'react-bootstrap/Button'\nimport { Files } from 'react-bootstrap-icons';\n\nclass DuplicateButton extends React.Component {\n\n  render() {\n    return (\n      <Button variant=\"light\" className={this.props.className}\n        onClick={() => { this.props.dispatch(duplicateSelected()) }}>\n        <Files />\n      </Button >\n    );\n  }\n\n}\n\nexport default connect()(DuplicateButton)","import React from 'react'\nimport { connect } from 'react-redux'\nimport { fanHeureDepartButtonClicked, fanHeureDepartClosed, fanHeureDepartValidated } from '../../app/actions'\n\nimport DropdownItem from 'react-bootstrap/DropdownItem'\nimport Button from 'react-bootstrap/Button'\nimport Modal from 'react-bootstrap/Modal'\nimport FormControl from 'react-bootstrap/FormControl'\nimport Form from 'react-bootstrap/Form'\nimport InputGroup from 'react-bootstrap/InputGroup'\n\nclass FanHeureDepartButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        let parsedDate = new Date(Date.now());\n        this.dateEdited = parsedDate.toISOString().slice(0, 10);\n        this.timeEdited = parsedDate.toLocaleTimeString('fr-FR');\n\n        this.increment = 600; // default: 10 minutes increment\n\n        // These bindings are necessary to make `this` work in the callback    \n        this.handleShow = this.handleShow.bind(this);\n        this.handleClose = this.handleClose.bind(this);\n        this.handleValidate = this.handleValidate.bind(this);\n    }\n\n    handleShow(event) {\n        this.props.dispatch(fanHeureDepartButtonClicked());\n        event.stopPropagation();\n    }\n\n    handleClose(event) {\n        this.props.dispatch(fanHeureDepartClosed());\n        if (event) {\n            event.stopPropagation();\n        }\n    }\n\n    handleValidate(event) {\n        let newHeureDepart = new Date(\n            this.dateEdited + \" \" + this.timeEdited);\n        this.props.dispatch(\n            fanHeureDepartValidated(newHeureDepart.toISOString(), this.increment));\n        event.stopPropagation();\n    }\n\n    render() {\n        return (\n            <DropdownItem variant=\"light\" onClick={this.handleShow}>\n                Heure départ\n                <Modal show={this.props.shown} onHide={this.handleClose}\n                    onClick={(event) => { event.stopPropagation(); }}>\n                    <Modal.Header closeButton>\n                        <Modal.Title>Ventilatation des heures de départ</Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n                        <Form.Group>\n                            <Form.Label>Heure de départ</Form.Label>\n\n                            <InputGroup>\n                                <FormControl\n                                    defaultValue={this.dateEdited}\n                                    aria-label=\"Date de départ\"\n                                    type=\"date\"\n                                    onChange={(event) => {\n                                        this.dateEdited = event.target.value;\n                                    }}\n                                />\n                                <FormControl\n                                    defaultValue={this.timeEdited}\n                                    aria-label=\"Heure de départ\"\n                                    type=\"time\"\n                                    onChange={(event) => {\n                                        this.timeEdited = event.target.value;\n                                    }}\n                                />\n                            </InputGroup>\n                        </Form.Group>\n                        <Form.Group>\n                            <Form.Label>Incrément</Form.Label>\n                            <Form.Control\n                                defaultValue={\"00:10:00\"}\n                                type=\"time\" placeholder=\"Incrément\"\n                                onChange={(event) => {\n                                    var secondsInc =\n                                        parseInt(event.target.value.slice(0, 2) * 3600, 10);\n                                    secondsInc += parseInt(event.target.value.slice(3, 5) * 60, 10);\n                                    secondsInc += parseInt(event.target.value.slice(6, 8), 10);\n                                    this.increment = secondsInc;\n                                }} />\n                        </Form.Group>\n                    </Modal.Body>\n                    <Modal.Footer>\n                        <Button variant=\"danger\" onClick={this.handleClose}>\n                            Annuler\n                    </Button>\n                        <Button variant=\"success\" onClick={this.handleValidate}>\n                            Valider\n                    </Button>\n                    </Modal.Footer>\n                </Modal>\n            </DropdownItem>\n        );\n    }\n\n}\n\nconst mapState = (state) => {\n    return ({\n        shown: state.toolbar.fanHeureDepartModal.shown\n    });\n}\n\nexport default connect(mapState)(FanHeureDepartButton)","import React from 'react'\nimport { connect } from 'react-redux'\nimport { fanNumMarcheButtonClicked, fanNumMarcheClosed, fanNumMarcheValidated } from '../../app/actions'\n\nimport DropdownItem from 'react-bootstrap/DropdownItem'\nimport Button from 'react-bootstrap/Button'\nimport Modal from 'react-bootstrap/Modal'\nimport FormControl from 'react-bootstrap/FormControl'\nimport Form from 'react-bootstrap/Form'\n\nclass FanNumMarcheButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.numMarcheEdited = 0;\n        this.increment = 1;\n\n        // These bindings are necessary to make `this` work in the callback    \n        this.handleShow = this.handleShow.bind(this);\n        this.handleClose = this.handleClose.bind(this);\n        this.handleValidate = this.handleValidate.bind(this);\n    }\n\n    handleShow(event) {\n        this.props.dispatch(fanNumMarcheButtonClicked());\n        event.stopPropagation();\n    }\n\n    handleClose(event) {\n        this.props.dispatch(fanNumMarcheClosed());\n        if (event) {\n            event.stopPropagation();\n        }\n    }\n\n    handleValidate(event) {\n        this.props.dispatch(\n            fanNumMarcheValidated(this.numMarcheEdited, this.increment));\n        event.stopPropagation();\n    }\n\n    render() {\n        return (\n            <DropdownItem onClick={this.handleShow}>\n                Numéro de marche\n                <Modal show={this.props.shown} onHide={this.handleClose} \n                onClick={(event) => { event.stopPropagation(); }}>\n                    <Modal.Header closeButton>\n                        <Modal.Title>Ventilatation des numéros de marche</Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n                        <Form.Group>\n                            <Form.Label>Numéro de marche intial</Form.Label>\n                            <FormControl\n                                defaultValue={this.dateEdited}\n                                aria-label=\"Numéro de marche\"\n                                type=\"number\"\n                                onChange={(event) => {\n                                    this.numMarcheEdited = parseInt(event.target.value, 10);\n                                }}\n                            />\n                        </Form.Group>\n                        <Form.Group>\n                            <Form.Label>Incrément</Form.Label>\n                            <Form.Control\n                                defaultValue=\"1\"\n                                type=\"number\" placeholder=\"Incrément\"\n                                onChange={(event) => {\n                                    this.increment = parseInt(event.target.value, 10);\n                                }\n                                } />\n                        </Form.Group>\n                    </Modal.Body>\n                    <Modal.Footer>\n                        <Button variant=\"danger\" onClick={this.handleClose}>\n                            Annuler\n                    </Button>\n                        <Button variant=\"success\" onClick={this.handleValidate}>\n                            Valider\n                    </Button>\n                    </Modal.Footer>\n                </Modal>\n            </DropdownItem>\n        );\n    }\n\n}\n\nconst mapState = (state) => {\n    return ({\n        shown: state.toolbar.fanNumMarcheModal.shown\n    });\n}\n\nexport default connect(mapState)(FanNumMarcheButton)","import React from 'react'\nimport { connect } from 'react-redux'\nimport { shiftDateButtonClicked, shiftDateClosed, shiftDateValidated } from '../../app/actions'\n\nimport Button from 'react-bootstrap/Button'\nimport Modal from 'react-bootstrap/Modal'\nimport FormControl from 'react-bootstrap/FormControl'\nimport Form from 'react-bootstrap/Form'\nimport InputGroup from 'react-bootstrap/InputGroup'\nimport { BoxArrowRight } from 'react-bootstrap-icons'\n\nclass ShiftDateButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        let parsedDate = new Date(Date.now());\n        this.startDay = parsedDate.toISOString().slice(0, 10);\n        this.startTime = \"00:00:00\";\n        this.goalDay = parsedDate.toISOString().slice(0, 10);\n        this.goalTime = \"00:00:00\";\n\n        // These bindings are necessary to make `this` work in the callback    \n        this.handleShow = this.handleShow.bind(this);\n        this.handleClose = this.handleClose.bind(this);\n        this.handleValidate = this.handleValidate.bind(this);\n    }\n\n    handleShow(event) {\n        this.props.dispatch(shiftDateButtonClicked());\n        event.stopPropagation();\n    }\n\n    handleClose(event) {\n        this.props.dispatch(shiftDateClosed());\n        if (event) {\n            event.stopPropagation();\n        }\n    }\n\n    handleValidate(event) {\n        let start = new Date(this.startDay + \" \" + this.startTime);\n        let goal = new Date(this.goalDay + \" \" + this.goalTime);\n        this.props.dispatch(\n            shiftDateValidated(start.toISOString(), goal.toISOString())\n        );\n        event.stopPropagation();\n    }\n\n    render() {\n        return (\n            <>\n                <Button variant=\"light\" className={this.props.className} onClick={this.handleShow}>\n                    <BoxArrowRight />\n                </Button>\n                <Modal show={this.props.shown} onHide={this.handleClose}\n                    onClick={(event) => { event.stopPropagation(); }}>\n                    <Modal.Header closeButton>\n                        <Modal.Title>Décalage des heures de départ</Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n                        <Form.Group>\n                            <Form.Label>De la date</Form.Label>\n                            <InputGroup>\n                                <FormControl\n                                    defaultValue={this.startDay}\n                                    aria-label=\"De la date (jour)\"\n                                    type=\"date\"\n                                    onChange={(event) => {\n                                        this.startDay = event.target.value;\n                                    }}\n                                />\n                                <FormControl\n                                    defaultValue={this.startTime}\n                                    aria-label=\"De la date (heure)\"\n                                    type=\"time\"\n                                    onChange={(event) => {\n                                        this.startTime = event.target.value;\n                                    }}\n                                />\n                            </InputGroup>\n                        </Form.Group>\n\n                        <Form.Group>\n                            <Form.Label>Vers la date</Form.Label>\n                            <InputGroup>\n                                <FormControl\n                                    defaultValue={this.goalDay}\n                                    aria-label=\"Vers la date (jour)\"\n                                    type=\"date\"\n                                    onChange={(event) => {\n                                        this.goalDay = event.target.value;\n                                    }}\n                                />\n                                <FormControl\n                                    defaultValue={this.goalTime}\n                                    aria-label=\"Vers la date (heure)\"\n                                    type=\"time\"\n                                    onChange={(event) => {\n                                        this.goalTime = event.target.value;\n                                    }}\n                                />\n                            </InputGroup>\n                        </Form.Group>\n                    </Modal.Body>\n                    <Modal.Footer>\n                        <Button variant=\"danger\" onClick={this.handleClose}>\n                            Annuler\n                    </Button>\n                        <Button variant=\"success\" onClick={this.handleValidate}>\n                            Valider\n                    </Button>\n                    </Modal.Footer>\n                </Modal>\n            </>\n        );\n    }\n\n}\n\nconst mapState = (state) => {\n    return ({\n        shown: state.toolbar.shiftDateModal.shown\n    });\n}\n\nexport default connect(mapState)(ShiftDateButton)","import React from 'react';\n\nimport Navbar from 'react-bootstrap/Navbar'\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\nimport DropdownButton from 'react-bootstrap/DropdownButton'\nimport { ListNested } from 'react-bootstrap-icons';\n\nimport SelectionButtonsGroup from '../containers/toolbar/SelectionButtonsGroup'\nimport LoadButton from '../containers/toolbar/LoadButton'\nimport SaveButton from '../containers/toolbar/SaveButton'\nimport DeleteButton from '../containers/toolbar/DeleteButton'\nimport DuplicateButton from '../containers/toolbar/DuplicateButton'\nimport FanHeureDepartButton from '../containers/toolbar/FanHeureDepartButton'\nimport FanNumMarcheButton from '../containers/toolbar/FanNumMarcheButton'\nimport ShiftDateButton from '../containers/toolbar/ShiftDateButton'\n\nconst Toolbar = () => (\n    <Navbar bg=\"dark\" sticky=\"top\">\n        <LoadButton className=\"mr-2\" />\n        <SelectionButtonsGroup className=\"mr-2\" />\n        <ButtonGroup className=\"mr-2\">\n            <DuplicateButton />\n            <DeleteButton />\n        </ButtonGroup>\n\n        <ShiftDateButton className=\"mr-2\" />\n\n        <DropdownButton variant=\"light\" title={<ListNested />}>\n            <FanNumMarcheButton />\n            <FanHeureDepartButton />\n        </DropdownButton>\n\n        <SaveButton fileName=\"circulations.xml\" className=\"ml-auto\" />\n    </Navbar>\n)\n\nexport default Toolbar;\n","const xmlParser = new DOMParser();\nconst xmlSerializer = new XMLSerializer();\n\nexport const xmlTextToCirculationsObject = (xmlText, defaultCirculationObject) => {\n  let result = { };\n  let xmlDoc = xmlParser.parseFromString(xmlText, \"application/xml\");\n  let circulations = xmlDoc.getElementsByTagName(\"Circulation\");\n\n  Array.from(circulations).forEach((circulation) => {\n    var currentId = 0;\n    if (circulation.hasChildNodes) {\n      circulation.childNodes.forEach((node) => {\n        switch (node.tagName) {\n          case \"id\":\n            currentId = node.innerHTML;\n            result[currentId] = {\n              ...defaultCirculationObject,\n              id: node.innerHTML,\n            };\n            break;\n          case \"dateCreation\":\n            result[currentId].dateCreation = node.innerHTML;\n            break;\n          case \"demandeur\":\n            result[currentId].demandeur = node.innerHTML;\n            break;\n          case \"localisation\":\n            result[currentId].localisation = node.innerHTML;\n            break;\n          case \"Parcours\":\n            result[currentId].parcours = xmlSerializer.serializeToString(node);\n            break;\n          case \"Mission\":\n            result[currentId].mission = xmlSerializer.serializeToString(node);\n            break;\n          case \"ProfilHoraire\":\n            result[currentId].profilHoraire = xmlSerializer.serializeToString(node);\n            break;\n          case \"ProfilDeCirculation\":\n            result[currentId].profilDeCirculation = xmlSerializer.serializeToString(node);\n            break;\n          case \"evenementsCirculation\":\n            result[currentId].evenementsCirculation = xmlSerializer.serializeToString(node);\n            break;\n          case \"EtatCirculation\":\n            result[currentId].etatCirculation = xmlSerializer.serializeToString(node);\n            break;\n          case \"TypeConvoi\":\n            result[currentId].typeConvoi = xmlSerializer.serializeToString(node);\n            break;\n          case \"TypeGestion\":\n            result[currentId].typeGestion = xmlSerializer.serializeToString(node);\n            break;\n          case \"renvoisStandards\":\n            result[currentId].renvoisStandards = xmlSerializer.serializeToString(node);\n            break;\n          case \"ParcoursTopologique\":\n            result[currentId].parcoursTopologique = xmlSerializer.serializeToString(node);\n            break;\n          default:\n            return;\n        }\n      })\n    }\n  })\n\n  return result;\n}\n\nexport const getNumMarche = (circulation) => {\n    let xmlDom = xmlParser.parseFromString(circulation.etatCirculation, \"application/xml\");\n    return xmlDom.getElementsByTagName(\"numMarcheOrigine\")[0].innerHTML;\n}\n\nexport const withNumMarche = (circulation, numMarche) => {\n  let xmlDom = xmlParser.parseFromString(circulation.etatCirculation, \"application/xml\");\n  xmlDom.getElementsByTagName(\"numMarcheOrigine\")[0].innerHTML = numMarche;\n  return ({\n    ...circulation,\n    etatCirculation: xmlSerializer.serializeToString(xmlDom) \n  })\n}\n\nexport const getCodeTCT = (circulation) => {\n    let xmlDom = xmlParser.parseFromString(circulation.typeGestion, \"application/xml\");\n    return xmlDom.getElementsByTagName(\"tct\")[0].getElementsByTagName(\"libelle\")[0].innerHTML;\n}\n\nexport const withCodeTCT = (circulation, tctId, tctCode) => {\n    let xmlDom = xmlParser.parseFromString(circulation.typeGestion, \"application/xml\");\n    xmlDom.getElementsByTagName(\"tct\")[0].getElementsByTagName(\"id\")[0].innerHTML = tctId;\n    xmlDom.getElementsByTagName(\"tct\")[0].getElementsByTagName(\"code\")[0].innerHTML = tctCode;\n    xmlDom.getElementsByTagName(\"tct\")[0].getElementsByTagName(\"libelle\")[0].innerHTML = tctCode;\n    return ({\n      ...circulation,\n      typeGestion: xmlSerializer.serializeToString(xmlDom) \n    })\n}\nexport const getHeureDepart = (circulation) => {\n    let xmlDom = xmlParser.parseFromString(circulation.etatCirculation, \"application/xml\");\n    return xmlDom.getElementsByTagName(\"dateHeureOrigine\")[0].innerHTML;\n}\n\nexport const withHeureDepart = (circulation, heureDepart) => {\n    let xmlDom = xmlParser.parseFromString(circulation.etatCirculation, \"application/xml\");\n    xmlDom.getElementsByTagName(\"dateHeureOrigine\")[0].innerHTML = heureDepart;\n    return ({\n      ...circulation,\n      etatCirculation: xmlSerializer.serializeToString(xmlDom) \n    })\n}\n\nexport const getDepart = (circulation) => {\n    let xmlDom = xmlParser.parseFromString(circulation.mission, \"application/xml\");\n    return xmlDom.getElementsByTagName(\"etapesMission\")[0]\n        .getElementsByTagName(\"EtapeMission\")[0]\n        .getElementsByTagName(\"pr\")[0].getAttribute(\"id\");\n}\n\nexport const getArrivee = (circulation) => {\n    let xmlDom = xmlParser.parseFromString(circulation.mission, \"application/xml\");\n    const Etapes = xmlDom.getElementsByTagName(\"etapesMission\")[0]\n        .getElementsByTagName(\"EtapeMission\");\n    return Etapes[Etapes.length - 1].getElementsByTagName(\"pr\")[0].getAttribute(\"id\");\n}\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport { duplicateCirculation } from '../../app/actions'\nimport { deleteCirculation } from '../../app/actions'\n\nimport Button from 'react-bootstrap/Button'\nimport { Files } from 'react-bootstrap-icons';\nimport { Trash } from 'react-bootstrap-icons';\n\nclass CirculationRowAction extends React.Component {\n\n  render() {\n    return (\n      <div className={this.props.className}>\n        <Button\n          onClick={(event) => {\n            this.props.dispatch(duplicateCirculation(this.props.id));\n            event.stopPropagation();\n          }}\n          variant=\"outline-dark\" size=\"sm\"\n          className=\"mr-1 py-0 btn-xs\" >\n          <Files />\n        </Button>\n        <Button\n          onClick={(event) => {\n            this.props.dispatch(deleteCirculation(this.props.id));\n            event.stopPropagation();\n          }}\n          variant=\"outline-dark\" size=\"sm\"\n          className=\"py-0 btn-xs\" >\n          <Trash />\n        </Button>\n      </div>\n    );\n  }\n\n}\n\nexport default connect()(CirculationRowAction)","import React from 'react'\nimport { connect } from 'react-redux'\nimport { changeNumMarche, stopNumMarcheCellEdition } from '../../app/actions'\n\nimport InputGroup from 'react-bootstrap/InputGroup'\nimport Button from 'react-bootstrap/Button'\nimport FormControl from 'react-bootstrap/FormControl'\nimport { Check } from 'react-bootstrap-icons';\n\nclass NumMarcheCellEditor extends React.Component {\n    constructor(props) {\n        super(props);\n        this.numMarcheEdit = props.numMarche;\n\n        // This binding is necessary to make `this` work in the callback    \n        this.handleValidate = this.handleValidate.bind(this);\n    }\n\n    handleValidate() {\n        if (this.props.numMarche !== this.numMarcheEdit) {\n            this.props.dispatch(\n                changeNumMarche(this.props.id, this.numMarcheEdit));\n        } else {\n            this.props.dispatch(\n                stopNumMarcheCellEdition(this.props.id));\n        }\n    }\n\n    render() {\n        return (\n            <InputGroup className={this.props.className}>\n                <FormControl\n                    defaultValue={this.props.numMarche}\n                    aria-label=\"Numéro de marche\"\n                    onChange={(event) => { this.numMarcheEdit = event.target.value }}\n                    onClick={(event) => { event.stopPropagation() }}\n                    onKeyDown={(event) => { \n                        if (event.key === \"Escape\") {\n                        this.props.dispatch(stopNumMarcheCellEdition(this.props.id));\n                    }}}\n                    onKeyPress={(event) => {\n                        if (event.key === \"Enter\") {\n                            this.handleValidate();\n                    }}}\n                />\n                <InputGroup.Append>\n                    <Button variant=\"success\"\n                        onClick={(event) => {\n                            this.handleValidate();\n                            event.stopPropagation();\n                        }}>\n                        <Check />\n                    </Button >\n                </InputGroup.Append>\n            </InputGroup>\n        );\n    }\n\n}\n\nexport default connect()(NumMarcheCellEditor)\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { changeHeureDepart, stopHeureDepartCellEdition } from '../../app/actions'\n\nimport InputGroup from 'react-bootstrap/InputGroup'\nimport Button from 'react-bootstrap/Button'\nimport FormControl from 'react-bootstrap/FormControl'\nimport { Check } from 'react-bootstrap-icons';\n\nclass HeureDepartCellEditor extends React.Component {\n    constructor(props) {\n        super(props);\n        let parsedDate = new Date(props.heureDepart);\n        this.dateEdited = parsedDate.toISOString().slice(0, 10);\n        this.timeEdited = parsedDate.toLocaleTimeString('fr-FR');\n\n        // This binding is necessary to make `this` work in the callback    \n        this.handleValidate = this.handleValidate.bind(this);\n    }\n\n    handleValidate() {\n        let newHeureDepart = new Date(\n            this.dateEdited + \" \" + this.timeEdited);\n        if (newHeureDepart !== this.props.heureDepart) {\n            this.props.dispatch(changeHeureDepart(\n                this.props.id, newHeureDepart.toISOString()))\n\n        } else {\n            this.props.dispatch(stopHeureDepartCellEdition(this.props.id));\n        }\n    }\n\n    render() {\n        return (\n            <div className={this.props.className}>\n                <InputGroup>\n                    <FormControl\n                        defaultValue={this.dateEdited}\n                        aria-label=\"Date de départ\"\n                        type=\"date\"\n                        onChange={(event) => {\n                            this.dateEdited = event.target.value\n                        }}\n                        onClick={(event) => { event.stopPropagation() }}\n                        onKeyDown={(event) => {\n                            if (event.key === \"Escape\") {\n                                this.props.dispatch(stopHeureDepartCellEdition(this.props.id));\n                            }\n                        }}\n                        onKeyPress={(event) => {\n                            if (event.key === \"Enter\") {\n                                this.handleValidate();\n                            }\n                        }}\n                    />\n                    <FormControl\n                        defaultValue={this.timeEdited}\n                        aria-label=\"Heure de départ\"\n                        type=\"time\"\n                        onChange={(event) => { this.timeEdited = event.target.value }}\n                        onClick={(event) => { event.stopPropagation() }}\n                        onKeyDown={(event) => {\n                            if (event.key === \"Escape\") {\n                                this.props.dispatch(stopHeureDepartCellEdition(this.props.id));\n                            }\n                        }}\n                        onKeyPress={(event) => {\n                            if (event.key === \"Enter\") {\n                                this.handleValidate();\n                            }\n                        }}\n                    />\n                    <InputGroup.Append>\n                        <Button variant=\"success\"\n                            onClick={(event) => {\n                                this.handleValidate();\n                                event.stopPropagation();\n                            }}>\n                            <Check />\n                        </Button >\n                    </InputGroup.Append>\n                </InputGroup>\n            </div>\n        );\n    }\n\n}\n\nexport default connect()(HeureDepartCellEditor)\n","const tctCodeIdMap = {\n    \"FCB\": \"77e8acc5-2d5c-11e6-8bb5-01e08e116de3\",\n    \"FCC\": \"7c996166-2d5c-11e6-a2d2-01e08e116de3\",\n    \"FEC\": \"76982e97-2d5c-11e6-8203-01e08e116de3\",\n    \"FER\": \"9009a7b6-2d5c-11e6-af37-01e08e116de3\",\n    \"FLC\": \"9f1e1dc1-2d5c-11e6-9942-01e08e116de3\",\n    \"FMB\": \"a87a1b74-2d5c-11e6-959d-01e08e116de3\",\n    \"FRR\": \"8a559299-2d5c-11e6-820b-01e08e116de3\",\n    \"FVC\": \"0460da1f-2d5d-11e6-b2be-01e08e116de3\",\n    \"HYD\": \"013eacaf-2d5e-11e6-a2b9-01e08e116de3\",\n    \"HZF\": \"807a7227-2d5c-11e6-b4aa-01e08e116de3\",\n    \"HZI\": \"dbee4698-2d5d-11e6-83ca-01e08e116de3\",\n    \"HZN\": \"fcaf8b51-2d5c-11e6-b540-01e08e116de3\",\n    \"IAT\": \"844416b7-2d7b-11e6-a021-01148e116de3\",\n    \"IEA\": \"ad77bd92-2d78-11e6-b578-01148e116de3\",\n    \"IVO\": \"8ddbe0fe-2d5c-11e6-90ac-01e08e116de3\",\n    \"JAB\": \"8492a97e-2d5d-11e6-93b3-01e08e116de3\",\n    \"JAC\": \"ce7c9a7d-2d5d-11e6-8f95-01e08e116de3\",\n    \"LBB\": \"ad4f8172-2d78-11e6-b384-01148e116de3\",\n    \"LBC\": \"76ceb1ad-2d5c-11e6-8409-01e08e116de3\",\n    \"LBG\": \"9ed9e77a-2d5c-11e6-95a2-01e08e116de3\",\n    \"LBL\": \"5b3d758f-2d5c-11e6-89c5-01e08e116de3\",\n    \"LCA\": \"3a4773c1-2d5d-11e6-9f32-01e08e116de3\",\n    \"LVD\": \"5ab0ab1c-2d5c-11e6-83e7-01e08e116de3\",\n    \"LVH\": \"5a58bbca-2d5c-11e6-802f-01e08e116de3\",\n    \"RBD\": \"fe9e3ec5-2d5b-11e6-892f-01e08e116de3\",\n    \"RBK\": \"6d957615-2d5c-11e6-8c5c-01e08e116de3\",\n    \"RBS\": \"00b5e5f7-2d5c-11e6-90cb-01e08e116de3\",\n    \"RCD\": \"6e53e9ee-2d5c-11e6-95fc-01e08e116de3\",\n    \"RCK\": \"6dbb8ee8-2d5c-11e6-8dfd-01e08e116de3\",\n    \"SCD\": \"dd4454d2-2d5c-11e6-9b0a-01e08e116de3\",\n    \"SCK\": \"8872471c-2d5c-11e6-ac4c-01e08e116de3\"\n}\n\nexport const getCodesTctArray = () => {\n    return Object.keys(tctCodeIdMap);\n}\n\nexport const getCodeTctId = (tctCode) => {\n     return tctCodeIdMap[tctCode];\n}","import React from 'react'\nimport { connect } from 'react-redux'\nimport { getCodesTctArray, getCodeTctId } from '../../app/tools/CodeTctTools'\nimport { changeCodeTct, stopCodeTctCellEdition } from '../../app/actions'\n\nimport InputGroup from 'react-bootstrap/InputGroup'\nimport Button from 'react-bootstrap/Button'\nimport FormControl from 'react-bootstrap/FormControl'\nimport { Check } from 'react-bootstrap-icons';\n\nclass CodeTctCellEditor extends React.Component {\n    constructor(props) {\n        super(props);\n        this.codeTctEdit = props.codeTCT;\n\n        // This binding is necessary to make `this` work in the callback    \n        this.handleValidate = this.handleValidate.bind(this);\n    }\n\n    handleValidate() {\n        if (this.props.codeTCT !== this.codeTctEdit) {\n            this.props.dispatch(\n                changeCodeTct(\n                    this.props.id, \n                    getCodeTctId(this.codeTctEdit), \n                    this.codeTctEdit));\n        } else {\n            this.props.dispatch(\n                stopCodeTctCellEdition(this.props.id));\n        }\n    }\n\n    render() {\n        return (\n            <InputGroup className={this.props.className}>\n                <FormControl as=\"select\"\n                    defaultValue={this.props.codeTCT}\n                    aria-label=\"Code TCT\"\n                    onChange={(event) => { this.codeTctEdit = event.target.value }}\n                    onClick={(event) => { event.stopPropagation() }}\n                    onKeyDown={(event) => {\n                        if (event.key === \"Escape\") {\n                            this.props.dispatch(stopCodeTctCellEdition(this.props.id));\n                        }\n                    }}\n                    onKeyPress={(event) => {\n                        if (event.key === \"Enter\") {\n                            this.handleValidate();\n                        }\n                }}>\n                    {getCodesTctArray().map(codeTct => (\n                        <option>{codeTct}</option>\n                    ))}\n                </FormControl>\n                <InputGroup.Append>\n                    <Button variant=\"success\"\n                        onClick={(event) => {\n                            this.handleValidate();\n                            event.stopPropagation();\n                        }}>\n                        <Check />\n                    </Button >\n                </InputGroup.Append>\n            </InputGroup>\n        );\n    }\n\n}\n\nexport default connect()(CodeTctCellEditor)\n","import React from 'react';\nimport { connect } from 'react-redux'\nimport { clickOnCirculationRow, numMarcheCellClicked, heureDepartCellClicked, codeTctCellClicked } from '../../app/actions'\nimport { getCodeTCT, getHeureDepart, getNumMarche } from '../../app/tools/CirculationXmlTools'\n\nimport CirculationRowActions from './CirculationRowActions'\nimport NumMarcheCellEditor from './NumMarcheCellEditor'\nimport HeureDepartCellEditor from './HeureDepartCellEditor'\nimport CodeTctCellEditor from './CodeTctCellEditor'\n\nclass CirculationRow extends React.Component {\n    render() {\n        let heureDepart = new Date(this.props.heureDepart);\n        return (\n            <tr className={this.props.selected ? \"table-secondary\" : \"\"}\n                onClick={() => { this.props.dispatch(clickOnCirculationRow(this.props.id)) }} >\n                <td>{this.props.id}</td>\n                <td>{\n                    this.props.numMarcheEdited\n                        ? <NumMarcheCellEditor\n                            id={this.props.id}\n                            numMarche={this.props.numMarche} />\n                        : <span onClick={(event) => {\n                            this.props.dispatch(numMarcheCellClicked(this.props.id));\n                            event.stopPropagation();\n                        }}>\n                            { this.props.numMarche }\n                        </span>\n                }</td>\n                <td>{\n                    this.props.codeTctEdited\n                        ? <CodeTctCellEditor\n                            id={this.props.id}\n                            codeTCT={this.props.codeTCT} />\n                        : <span onClick={(event) => {\n                            this.props.dispatch(codeTctCellClicked(this.props.id));\n                            event.stopPropagation();\n                        }}>\n                            { this.props.codeTCT }\n                        </span>\n                }</td>\n                <td>{\n                    this.props.heureDepartEdited\n                        ? <HeureDepartCellEditor\n                            id={this.props.id}\n                            heureDepart={this.props.heureDepart} />\n                        : <span onClick={(event) => {\n                            this.props.dispatch(heureDepartCellClicked(this.props.id));\n                            event.stopPropagation();\n                        }}>\n                            {heureDepart.toLocaleDateString('fr-FR')} - {heureDepart.toLocaleTimeString('fr-FR')}\n                        </span>\n                }</td>\n                <td><CirculationRowActions \n                id={this.props.id} className=\"float-right\" /></td>\n            </tr>\n        );\n    }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n    let circulation = state.circulationsById[ownProps.id];\n    return {\n        numMarche: getNumMarche(circulation),\n        codeTCT: getCodeTCT(circulation),\n        heureDepart: getHeureDepart(circulation),\n        selected: circulation.selected,\n        numMarcheEdited: circulation.numMarcheEdited,\n        heureDepartEdited: circulation.heureDepartEdited,\n        codeTctEdited: circulation.codeTctEdited\n    }\n}\n\n\nexport default connect(mapStateToProps)(CirculationRow);","import React from 'react';\nimport { connect } from 'react-redux'\n\nimport Table from 'react-bootstrap/Table';\nimport CirculationRow from './circulationTableRow/CirculationRow';\n\nconst CirculationsTable = ({ circulationsIdList }) => (\n    <Table hover>\n        <thead>\n            <tr>\n                <th className=\"w-30\">Id</th>\n                <th className=\"w-20\">Num. Marche</th>\n                <th className=\"w-15\">Code TCT</th>\n                <th className=\"w-25\">Date et heure de départ</th>\n                <th className=\"w-10\"></th>\n            </tr>\n        </thead>\n        <tbody>\n            {circulationsIdList.map(circulationId => (\n                <CirculationRow  key={circulationId}\n                id={circulationId} />\n            ))}\n        </tbody>\n    </Table >\n)\n\nconst mapStateToProps = state => {\n    return {\n        circulationsIdList: Object.keys(state.circulationsById)\n    }\n}\n\nexport default connect(mapStateToProps)(CirculationsTable);","import React from 'react';\n\nimport './App.css';\n\nimport Container from 'react-bootstrap/Container';\nimport Toolbar from './components/Toolbar'\nimport CirculationsTable from './containers/CirculationsTable';\n\nconst App = () => (\n  <Container fluid style={{ paddingLeft: 0, paddingRight: 0 }}>\n    <Toolbar />\n    <CirculationsTable />\n  </Container>\n);\n\nexport default App;\n","import { produce } from 'immer'\nimport { v1 as uuidv1 } from 'uuid';\nimport { xmlTextToCirculationsObject, getHeureDepart, withNumMarche, withHeureDepart, withCodeTCT } from '../tools/CirculationXmlTools'\n\nconst defaultCirculationObject = {\n  selected: false,\n  extended: false,\n  numMarcheEdited: false,\n  heureDepartEdited: false,\n  codeTctEdited: false\n}\n\nconst circulationsById = (state = {}, action) => {\n  switch (action.type) {\n    case 'XML_FILE_SUBMITED':\n      let circulationsToAdd = xmlTextToCirculationsObject(action.xmlText, defaultCirculationObject);\n      return ({\n        ...state,\n        ...circulationsToAdd\n      });\n    case 'SELECT_ALL':\n      return produce(state, draftState => {\n        Object.keys(draftState).forEach((id => { draftState[id].selected = true; }));\n      });\n    case 'UNSELECT_ALL':\n      return produce(state, draftState => {\n        Object.keys(draftState).forEach((id => { draftState[id].selected = false; }));\n      });\n    case 'FLIP_SELECT_ALL':\n      return produce(state, draftState => {\n        Object.keys(draftState).forEach((id => {\n          draftState[id].selected = !(draftState[id].selected);\n        }));\n      });\n    case 'CIRCULATION_CHANGED':\n      return produce(state, draftState => {\n        draftState[action.id] = {\n          ...draftState[action.id],\n          ...action.circulation\n        };\n      })\n    case 'CIRCULATION_ROW_CLICKED_ON':\n      return produce(state, draftState => {\n        if (draftState[action.id] != null) {\n          draftState[action.id].selected = !(draftState[action.id].selected);\n        }\n      });\n    case 'CIRCULATION_DELETED':\n      return omit(action.id, state);\n    case 'DELETE_SELECTED_BUTTON_PRESSED':\n      return filterObject(state, (circulation) => { return !circulation.selected; });\n    case 'CIRCULATION_DUPLICATED':\n      return Object.keys(state).reduce((result, id) => {\n        if (id === action.id) {\n          let newId = uuidv1();\n          return ({\n            ...result,\n            [id]: state[id],\n            [newId]: {\n              ...state[id],\n              id: newId,\n              selected: false\n            }\n          })\n        } else {\n          return ({ ...result, [id]: state[id] })\n        }\n      }, {});\n    case 'DUPLICATE_SELECTED_BUTTON_PRESSED':\n      return duplicateSelectedCirculations(state);\n    case 'NUM_MARCHE_CELL_CLICKED':\n      return produce(state, draftState => { draftState[action.id].numMarcheEdited = true; });\n    case 'STOP_NUM_MARCHE_CELL_EDITION':\n      return produce(state, draftState => { draftState[action.id].numMarcheEdited = false; });\n    case 'CIRCULATION_NUM_MARCHE_CHANGED':\n      return produce(state, draftState => {\n        draftState[action.id] = withNumMarche(draftState[action.id], action.numMarche);\n        draftState[action.id].numMarcheEdited = false;\n      });\n    case 'HEURE_DEPART_CELL_CLICKED':\n      return produce(state, draftState => { draftState[action.id].heureDepartEdited = true; });\n    case 'STOP_HEURE_DEPART_CELL_EDITION':\n      return produce(state, draftState => { draftState[action.id].heureDepartEdited = false; });\n    case 'CIRCULATION_HEURE_DEPART_CHANGED':\n      return produce(state, draftState => {\n        draftState[action.id] = withHeureDepart(draftState[action.id], action.heureDepart);\n        draftState[action.id].heureDepartEdited = false;\n      });\n    case 'TCT_CELL_CLICKED':\n      return produce(state, draftState => { draftState[action.id].codeTctEdited = true; });\n    case 'STOP_TCT_CELL_EDITION':\n      return produce(state, draftState => { draftState[action.id].codeTctEdited = false; });\n    case 'CIRCULATION_TCT_CHANGED':\n      return produce(state, draftState => {\n        draftState[action.id] = withCodeTCT(draftState[action.id], action.tctId, action.tctCode);\n        draftState[action.id].codeTctEdited = false;\n      });\n    case 'FAN_HEURE_DEPART_VALIDATED':\n      return fanHeureDepart(state, action.start, action.secondsIncrement);\n    case 'FAN_NUM_MARCHE_VALIDATED':\n      return fanNumMarche(state, action.start, action.increment);\n    case 'SHIFT_DATE_VALIDATED':\n      return shiftDate(state, action.start, action.goal);\n    default:\n      return state\n  }\n}\n\nconst omit = (keyToOmit, { [keyToOmit]: _, ...omittedPropObj } = {}) => omittedPropObj;\n\nconst filterObject = (object, filterFunction) => {\n  let filtered = {};\n  Object.keys(object).forEach((key) => {\n    if (filterFunction(object[key])) {\n      filtered[key] = object[key];\n    }\n  })\n  return filtered;\n}\n\nconst duplicateSelectedCirculations = (state) => {\n  return Object.keys(state).reduce((result, id) => {\n    if (state[id].selected) {\n      let newId = uuidv1();\n      return ({\n        ...result,\n        [id]: state[id],\n        [newId]: {\n          ...state[id],\n          id: newId,\n          selected: false\n        }\n      })\n    } else {\n      return ({ ...result, [id]: state[id] })\n    }\n  }, {});\n}\n\nconst fanHeureDepart = (state, start, secondsIncrement) => {\n  var currentDate = new Date(start);\n  return produce(state, draftState => {\n    Object.keys(draftState).forEach((id) => {\n      if (draftState[id].selected) {\n        draftState[id] = withHeureDepart(draftState[id], currentDate);\n        currentDate.setSeconds(currentDate.getSeconds() + secondsIncrement);\n      }\n    });\n  });\n}\n\nconst fanNumMarche = (state, start, increment) => {\n  var currentId = start;\n  return produce(state, draftState => {\n    Object.keys(draftState).forEach((id) => {\n      if (draftState[id].selected) {\n        draftState[id] = withNumMarche(draftState[id], currentId);\n        currentId += increment;\n      }\n    })\n  });\n}\n\nconst shiftDate = (state, start, goal) => {\n  const startDate = new Date(start);\n  const goalDate = new Date(goal);\n  const delta = goalDate - startDate;\n\n  return produce(state, draftState => {\n    Object.keys(draftState).forEach((id) => {\n      const origDate = new Date(getHeureDepart(draftState[id]));\n      draftState[id] = withHeureDepart(draftState[id], (new Date(origDate.getTime() + delta)));\n    });\n  });\n}\n\nexport default circulationsById","import { produce } from 'immer'\n\nlet defaultState = {\n    loadingInfo: {\n        isLoading: false,\n        toLoadCount: 0,\n        loadedCount: 0\n    },\n    shiftDateModal: {\n        shown: false,\n    },\n    fanHeureDepartModal: {\n        shown: false,\n    },\n    fanNumMarcheModal: {\n        shown: false,\n    }\n}\n\nconst toolbar = (state = defaultState, action) => {\n    switch (action.type) {\n        case 'FAN_HEURE_DEPART_BUTTON_CLICKED':\n            return produce(state, draftState => { draftState.fanHeureDepartModal.shown = true; });\n        case 'FAN_HEURE_DEPART_VALIDATED':\n        case 'FAN_HEURE_DEPART_CLOSED':\n            return produce(state, draftState => { draftState.fanHeureDepartModal.shown = false; });\n        case 'FAN_NUM_MARCHE_BUTTON_CLICKED':\n            return produce(state, draftState => { draftState.fanNumMarcheModal.shown = true; });\n        case 'FAN_NUM_MARCHE_VALIDATED':\n        case 'FAN_NUM_MARCHE_CLOSED':\n            return produce(state, draftState => { draftState.fanNumMarcheModal.shown = false; });\n        case 'SHIFT_DATE_BUTTON_CLICKED':\n            return produce(state, draftState => { draftState.shiftDateModal.shown = true; });\n        case 'SHIFT_DATE_VALIDATED':\n        case 'SHIFT_DATE_CLOSED':\n            return produce(state, draftState => { draftState.shiftDateModal.shown = false; });\n        default:\n            return state\n    }\n}\n\nexport default toolbar","import { combineReducers } from 'redux'\nimport circulationsById from './circulationsById'\nimport toolbar from './toolbar'\n\nexport default combineReducers({\n    toolbar,\n    circulationsById\n})","import { configureStore } from '@reduxjs/toolkit'\n\nimport reducer from './reducers/index'\n\nexport default configureStore({\n  reducer\n});","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nimport store from './app/store';\nimport { Provider } from 'react-redux';\n\n// Importing the Bootstrap CSS\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n    <React.StrictMode>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n  );\n  "],"sourceRoot":""}